{"version":3,"sources":["components/Card/card-component.jsx","components/CardList/card-list.component.jsx","components/got.js","components/SearchBox/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","_props$user","user","src","name","house","react_default","a","createElement","className","alt","concat","style","width","height","CardList","_ref","arr","map","i","card_component_Card","key","gotcaste","Searchbox","placeholder","searchChange","type","onChange","borderRadius","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this$state","filteredChars","filter","char","toLowerCase","includes","search_box_component_Searchbox","card_list_component_CardList","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAGaA,EAAO,SAAAC,GAAS,IAAAC,EACED,EAAME,KAA3BC,EADmBF,EACnBE,IAAKC,EADcH,EACdG,KAAMC,EADQJ,EACRI,MACnB,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACbH,EAAAC,EAAAC,cAAA,OACEE,IAAI,WACJP,IAAG,GAAAQ,OAAKR,GACRS,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAEnCR,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,KCTGU,SAAW,SAAAC,GAAa,IAAVC,EAAUD,EAAVC,IACzB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEZQ,EAAIC,IAAI,SAAChB,EAAMiB,GACd,OAAOb,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKF,EAAGjB,KAAMA,SCVtBoB,EAAW,CACtB,CACEnB,IACE,sNACFC,KAAM,cACNC,MAAO,eAET,CACEF,IACE,qJACFC,KAAM,mBACNC,MAAO,mBAET,CACEF,IACE,+IACFC,KAAM,WACNC,MAAO,mBAET,CACEF,IAAK,sCACLC,KAAM,mBACNC,MAAO,mBAET,CACEF,IACE,0HACFC,KAAM,gBACNC,MAAO,iBAET,CACEF,IACE,8GACFC,KAAM,gBACNC,MAAO,gBAET,CACEF,IACE,+IACFC,KAAM,iBACNC,MAAO,iBAET,CACEF,IACE,0MACFC,KAAM,gBACNC,MAAO,gBAET,CACEF,IACE,mHACFC,KAAM,eACNC,MAAO,eAET,CACEF,IACE,wNACFC,KAAM,cACNC,MAAO,eAET,CACEF,IACE,oIACFC,KAAM,mBACNC,MAAO,mBAET,CACEF,IACE,sFACFC,KAAM,sBACNC,MAAO,oBCnEEkB,EAAY,SAAAP,GAAmC,IAAhCQ,EAAgCR,EAAhCQ,YAAaC,EAAmBT,EAAnBS,aACvC,OACEnB,EAAAC,EAAAC,cAAA,SACEC,UAAU,gDACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,EACVb,MAAO,CAAEgB,aAAc,MAAOf,MAAO,YCLtBgB,cACnB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QASFI,eAAiB,SAAAC,GACfR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAT1CZ,EAAKa,MAAQ,CAEXrB,SAAUA,EACVkB,YAAa,IALHV,wEAeL,IAAAc,EAC2BX,KAAKU,MAA/BrB,EADDsB,EACCtB,SAAUkB,EADXI,EACWJ,YAEZK,EAAgBvB,EAASwB,OAAO,SAAAC,GACpC,OAAOA,EAAK3C,KAAK4C,cAAcC,SAAST,EAAYQ,iBAEtD,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,mBAEAH,EAAAC,EAAAC,cAAC0C,EAAD,CACEzB,aAAcQ,KAAKI,eACnBb,YAAa,yBAEflB,EAAAC,EAAAC,cAAC2C,EAAD,CAAUlC,IAAK4B,YA9BUO,aCObC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.362e812c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//FUNCTIONAL COMPONENT\r\nexport const Card = props => {\r\n  const { src, name, house } = props.user;\r\n  return (\r\n    /*creating a  card*/\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n      <img\r\n        alt=\"gotcaste\"\r\n        src={`${src}`}\r\n        style={{ width: \"250px\", height: \"240px\" }}\r\n      />\r\n      <h2>{name}</h2>\r\n      <p>{house}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../Card/card-component\";\r\nimport \"../CardList/card-list.styles.css\";\r\n\r\n//FUNCTIONAL COMPONENT\r\nexport const CardList = ({ arr }) => {\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {/*Mapping the filtered array and passing the props to card component*/}\r\n      {arr.map((user, i) => {\r\n        return <Card key={i} user={user} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","export const gotcaste = [\r\n  {\r\n    src:\r\n      \"https://cdn.vox-cdn.com/thumbor/D5J8SxvLcqb7Ecj3Wp2SI8ueH08=/0x0:3155x2100/1220x813/filters:focal(1312x535:1816x1039):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/63869037/_20__Helen_Sloan___HBO.0.jpg\",\r\n    name: \"Sansa Stark\",\r\n    house: \"House Stark\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://fsmedia.imgix.net/33/3f/c4/fb/6621/4588/a257/4abd3ac8ab25/jaime-lannister.jpeg?rect=0%2C39%2C1920%2C958&auto=format%2Ccompress&dpr=2&w=650\",\r\n    name: \"Jaime Lannister \",\r\n    house: \"House Lannister\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/c84f1ab96e310c9720530e59112c320fb1221023ce5b46a06f8f87d2def179fd-1558320464.jpg\",\r\n    name: \"Jon Snow\",\r\n    house: \"House Targaryen\"\r\n  },\r\n  {\r\n    src: \"https://i.stack.imgur.com/uwi3K.jpg\",\r\n    name: \"Robert Baratheon\",\r\n    house: \"House Baratheon\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://cdn1.thr.com/sites/default/files/imagecache/scale_crop_768_433/2017/08/macall_b._polay_-_hbo_photo_3-h_2017.jpg\",\r\n    name: \"Theon Greyjoy\",\r\n    house: \"House Greyjoy\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://vignette.wikia.nocookie.net/antagonists/images/f/f2/D9249a0ca874c3c3b6641814d40fe87764568388_hq.jpg\",\r\n    name: \"Ramsay Bolton\",\r\n    house: \"House Bolton\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://www.hbo.com/content/dam/hbodata/series/game-of-thrones/character/s5/oberyn-1920.jpg/_jcr_content/renditions/cq5dam.web.1200.675.jpeg\",\r\n    name: \"Oberyn Martell\",\r\n    house: \"House Martell\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://cdn.vox-cdn.com/thumbor/JO_L5nkdb0l7S0jKHkbX8PBwgT4=/240x0:1680x1080/1200x675/filters:focal(240x0:1680x1080)/cdn.vox-cdn.com/uploads/chorus_image/image/55999463/1_hGvPUF1hS2L31ho1Az4FMQ.0.png\",\r\n    name: \"Olenna Tyrell\",\r\n    house: \"House Tyrell\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://s3.r29static.com//bin/entry/17d/0,405,2990,1570/x,80/2184364/why-tobias-menzies-edmure-tully-2184364.jpg\",\r\n    name: \"Edmure Tully\",\r\n    house: \"House Tully\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://cdn.vox-cdn.com/thumbor/Br9wg1PLYy1hoWKOXAawAlXoB4Y=/0x0:1275x787/1200x0/filters:focal(0x0:1275x787):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/16287335/Screen_Shot_2019_05_19_at_9.01.31_PM.png\",\r\n    name: \"Arya Stark \",\r\n    house: \"House Stark\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/lena-headey-cersei-lannister-game-of-thrones-season-8-1553173898.jpg\",\r\n    name: \"Cersei Lannister\",\r\n    house: \"House Lannister\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://vignette.wikia.nocookie.net/gameofthrones/images/4/4f/Daenerys_Season_8.jpg\",\r\n    name: \"Daenerys Targaryen \",\r\n    house: \"House Targaryen\"\r\n  }\r\n];\r\n","import React from \"react\";\r\n\r\n//FUNCTIONAL COMPONENT\r\nexport const Searchbox = ({ placeholder, searchChange }) => {\r\n  return (\r\n    <input\r\n      className=\"pa3 ba b--green bg-lightest-blue search-input\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={searchChange}\r\n      style={{ borderRadius: \"5px\", width: \"250px\" }}\r\n    />\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { CardList } from \"./components/CardList/card-list.component\";\r\nimport { gotcaste } from \"./components/got\";\r\nimport { Searchbox } from \"./components/SearchBox/search-box.component\";\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      //assigning the array\r\n      gotcaste: gotcaste,\r\n      searchfield: \"\"\r\n    };\r\n  }\r\n\r\n  //searchfield is assigned the input value\r\n  onSearchChange = event => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  //FILTERING THE ARRAY ACCORDING TO THE SEARCHFIELD\r\n  render() {\r\n    const { gotcaste, searchfield } = this.state;\r\n    //filtering and showing only those characters whose name matches the input value\r\n    const filteredChars = gotcaste.filter(char => {\r\n      return char.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">GOT FLASH CARDS</h1>\r\n        {/*Passing props*/}\r\n        <Searchbox\r\n          searchChange={this.onSearchChange}\r\n          placeholder={\"search characters...\"}\r\n        />\r\n        <CardList arr={filteredChars} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}