{"version":3,"sources":["components/Card.js","components/CardList.js","components/got.js","components/Searchbox.js","App.js","serviceWorker.js","index.js"],"names":["Card","_this$props","this","props","src","name","house","react_default","a","createElement","className","alt","concat","style","width","height","Component","CardList","arr","map","user","i","Card_Card","key","gotcaste","Searchbox","type","placeholder","onChange","searchChange","borderRadius","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this$state","filteredChars","filter","char","toLowerCase","includes","Searchbox_Searchbox","CardList_CardList","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oMAEqBA,mLACV,IAAAC,EACsBC,KAAKC,MAA1BC,EADDH,EACCG,IAAKC,EADNJ,EACMI,KAAMC,EADZL,EACYK,MACnB,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACbH,EAAAC,EAAAC,cAAA,OACEE,IAAI,WACJP,IAAG,GAAAQ,OAAKR,GACRS,MAAO,CAAEC,MAAO,QAASC,OAAQ,WAEnCR,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,WAZsBU,aCCbC,mLAEjB,OACEV,EAAAC,EAAAC,cAAA,WAEGP,KAAKC,MAAMe,IAAIC,IAAI,SAACC,EAAMC,GACzB,OACEd,EAAAC,EAAAC,cAACa,EAAD,CAAMC,IAAKF,EAAGjB,IAAKgB,EAAKhB,IAAKC,KAAMe,EAAKf,KAAMC,MAAOc,EAAKd,kBAPhCU,aCHzBQ,EAAW,CACtB,CACEpB,IACE,sNACFC,KAAM,cACNC,MAAO,eAET,CACEF,IACE,qJACFC,KAAM,mBACNC,MAAO,mBAET,CACEF,IACE,+IACFC,KAAM,WACNC,MAAO,mBAET,CACEF,IAAK,sCACLC,KAAM,mBACNC,MAAO,mBAET,CACEF,IACE,0HACFC,KAAM,gBACNC,MAAO,iBAET,CACEF,IACE,8GACFC,KAAM,gBACNC,MAAO,gBAET,CACEF,IACE,+IACFC,KAAM,iBACNC,MAAO,iBAET,CACEF,IACE,0MACFC,KAAM,gBACNC,MAAO,gBAET,CACEF,IACE,mHACFC,KAAM,eACNC,MAAO,eAET,CACEF,IACE,wNACFC,KAAM,cACNC,MAAO,eAET,CACEF,IACE,oIACFC,KAAM,mBACNC,MAAO,mBAET,CACEF,IACE,sFACFC,KAAM,sBACNC,MAAO,oBCpEUmB,mLAEjB,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEC,UAAU,gDACVgB,KAAK,SACLC,YAAY,sBACZC,SAAU1B,KAAKC,MAAM0B,aACrBhB,MAAO,CAAEiB,aAAc,MAAOhB,MAAO,mBATRE,aCGlBe,cACnB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA6B,IACZC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnC,QASFoC,eAAiB,SAAAC,GACfP,EAAKQ,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAT1CX,EAAKY,MAAQ,CAEXpB,SAAUA,EACViB,YAAa,IALHT,wEAeL,IAAAa,EAC2B3C,KAAK0C,MAA/BpB,EADDqB,EACCrB,SAAUiB,EADXI,EACWJ,YAEZK,EAAgBtB,EAASuB,OAAO,SAAAC,GACpC,OAAOA,EAAK3C,KAAK4C,cAAcC,SAAST,EAAYQ,iBAEtD,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,mBAEAH,EAAAC,EAAAC,cAAC0C,EAAD,CAAWtB,aAAc3B,KAAKoC,iBAC9B/B,EAAAC,EAAAC,cAAC2C,EAAD,CAAUlC,IAAK4B,YA3BU9B,aCObqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.30a63c0c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Card extends Component {\r\n  render() {\r\n    const { src, name, house } = this.props;\r\n    return (\r\n      /*creating a  card*/\r\n      <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n        <img\r\n          alt=\"gotcaste\"\r\n          src={`${src}`}\r\n          style={{ width: \"200px\", height: \"200px\" }}\r\n        />\r\n        <h2>{name}</h2>\r\n        <p>{house}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default class CardList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/*Mapping the filtered array and passing the props to card component*/}\r\n        {this.props.arr.map((user, i) => {\r\n          return (\r\n            <Card key={i} src={user.src} name={user.name} house={user.house} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const gotcaste = [\r\n  {\r\n    src:\r\n      \"https://cdn.vox-cdn.com/thumbor/D5J8SxvLcqb7Ecj3Wp2SI8ueH08=/0x0:3155x2100/1220x813/filters:focal(1312x535:1816x1039):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/63869037/_20__Helen_Sloan___HBO.0.jpg\",\r\n    name: \"Sansa Stark\",\r\n    house: \"House Stark\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://fsmedia.imgix.net/33/3f/c4/fb/6621/4588/a257/4abd3ac8ab25/jaime-lannister.jpeg?rect=0%2C39%2C1920%2C958&auto=format%2Ccompress&dpr=2&w=650\",\r\n    name: \"Jaime Lannister \",\r\n    house: \"House Lannister\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/c84f1ab96e310c9720530e59112c320fb1221023ce5b46a06f8f87d2def179fd-1558320464.jpg\",\r\n    name: \"Jon Snow\",\r\n    house: \"House Targaryen\"\r\n  },\r\n  {\r\n    src: \"https://i.stack.imgur.com/uwi3K.jpg\",\r\n    name: \"Robert Baratheon\",\r\n    house: \"House Baratheon\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://cdn1.thr.com/sites/default/files/imagecache/scale_crop_768_433/2017/08/macall_b._polay_-_hbo_photo_3-h_2017.jpg\",\r\n    name: \"Theon Greyjoy\",\r\n    house: \"House Greyjoy\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://vignette.wikia.nocookie.net/antagonists/images/f/f2/D9249a0ca874c3c3b6641814d40fe87764568388_hq.jpg\",\r\n    name: \"Ramsay Bolton\",\r\n    house: \"House Bolton\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://www.hbo.com/content/dam/hbodata/series/game-of-thrones/character/s5/oberyn-1920.jpg/_jcr_content/renditions/cq5dam.web.1200.675.jpeg\",\r\n    name: \"Oberyn Martell\",\r\n    house: \"House Martell\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://cdn.vox-cdn.com/thumbor/JO_L5nkdb0l7S0jKHkbX8PBwgT4=/240x0:1680x1080/1200x675/filters:focal(240x0:1680x1080)/cdn.vox-cdn.com/uploads/chorus_image/image/55999463/1_hGvPUF1hS2L31ho1Az4FMQ.0.png\",\r\n    name: \"Olenna Tyrell\",\r\n    house: \"House Tyrell\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://s3.r29static.com//bin/entry/17d/0,405,2990,1570/x,80/2184364/why-tobias-menzies-edmure-tully-2184364.jpg\",\r\n    name: \"Edmure Tully\",\r\n    house: \"House Tully\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://cdn.vox-cdn.com/thumbor/Br9wg1PLYy1hoWKOXAawAlXoB4Y=/0x0:1275x787/1200x0/filters:focal(0x0:1275x787):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/16287335/Screen_Shot_2019_05_19_at_9.01.31_PM.png\",\r\n    name: \"Arya Stark \",\r\n    house: \"House Stark\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/lena-headey-cersei-lannister-game-of-thrones-season-8-1553173898.jpg\",\r\n    name: \"Cersei Lannister\",\r\n    house: \"House Lannister\"\r\n  },\r\n  {\r\n    src:\r\n      \"https://vignette.wikia.nocookie.net/gameofthrones/images/4/4f/Daenerys_Season_8.jpg\",\r\n    name: \"Daenerys Targaryen \",\r\n    house: \"House Targaryen\"\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Searchbox extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          className=\"pa3 ba b--green bg-lightest-blue search-input\"\r\n          type=\"search\"\r\n          placeholder=\"Search Characters..\"\r\n          onChange={this.props.searchChange}\r\n          style={{ borderRadius: \"5px\", width: \"250px\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"./components/CardList\";\r\nimport { gotcaste } from \"./components/got\";\r\nimport Searchbox from \"./components/Searchbox\";\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      //assigning the array\r\n      gotcaste: gotcaste,\r\n      searchfield: \"\"\r\n    };\r\n  }\r\n\r\n  //searchfield is assigned the input value\r\n  onSearchChange = event => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  //FILTERING THE ARRAY ACCORDING TO THE SEARCHFIELD\r\n  render() {\r\n    const { gotcaste, searchfield } = this.state;\r\n    //filtering and showing only those books whose name matches the input value\r\n    const filteredChars = gotcaste.filter(char => {\r\n      return char.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">GOT FLASH CARDS</h1>\r\n        {/*Passing props*/}\r\n        <Searchbox searchChange={this.onSearchChange} />\r\n        <CardList arr={filteredChars} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}